<script>
const simpleArray = function(...arr) {
    const array = [...arr];

    return {
        [Symbol.iterator]() {
            let index = 0;
            return {
                next() {
                    return {
                        value: array[index],
                        done: ++index > array.length
                    };
                }
            };
        }
    };
};

const iterable = simpleArray(1, 2, 3);
const iterator = iterable[Symbol.iterator]();

const iterableArr = [1, 2, 3];
const iteratorArr = iterableArr[Symbol.iterator]();

const simpleForOf = function(iterable, callback) {
    const iterator = iterable[Symbol.iterator]();
    
    for(let next = iterator.next(); !next.done; next = iterator.next()) {
        callback(next.value);
    }
}

const simpleWhileOf = function(iterable, callback) {
    const iterator = iterable[Symbol.iterator]();

    let next = iterator.next();
    while(!next.done) {
        callback(next.value);
        next = iterator.next();
    }
}

simpleForOf(iterableArr, value => console.log(value));
simpleWhileOf(iterableArr, value => console.log(value));
for(let value of iterable) { console.log(value); }

</script>